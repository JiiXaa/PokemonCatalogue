{"version":3,"sources":["js/index.js"],"names":["PokemonTCGCatalogue","cards","catalogue","API","API_VERSION","API_RESOURCE","API_ENDPOINT","UiSelectors","content","document","querySelector","pullCards","fetchData","createCatalogue","console","log","url","fetch","response","json","parsedResponse","innerHTML","map","card","createCard","join","name","number","imageUrl","supertype","subtype","rarity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAAMA;AACJ,iCAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,EAAb;AAEA,SAAKC,SAAL,GAAiB,IAAjB;AAEA,SAAKC,GAAL,GAAW,2BAAX;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,YAAL,GAAoB,OAApB;AAEA,SAAKC,YAAL,aAAuB,KAAKH,GAA5B,cAAmC,KAAKC,WAAxC,cAAuD,KAAKC,YAA5D;AAEA,SAAKE,WAAL,GAAmB;AACjBC,MAAAA,OAAO,EAAE;AADQ,KAAnB;AAGD;;;;;;;;;;AAGC,qBAAKN,SAAL,GAAiBO,QAAQ,CAACC,aAAT,CAAuB,KAAKH,WAAL,CAAiBC,OAAxC,CAAjB;AAEA,qBAAKG,SAAL;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIwB,KAAKC,SAAL,CAAe,KAAKN,YAApB;;;;AAAhBL,gBAAAA,8BAAAA;AAER,qBAAKA,KAAL,sBAAiBA,KAAjB;AAEA,qBAAKY,eAAL,CAAqB,KAAKZ,KAA1B;AAEAa,gBAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;;;;;;;;;;;;;;;QAGF;;;;;iGACgBe;;;;;;;uBACSC,KAAK,CAACD,GAAD;;;AAAtBE,gBAAAA;;uBACuBA,QAAQ,CAACC,IAAT;;;AAAvBC,gBAAAA;kDAECA;;;;;;;;;;;;;;;;;;oCAGOnB,OAAO;AAAA;;AACrB,WAAKC,SAAL,CAAemB,SAAf,IAA4B,CAC1BpB,KAAK,CAACqB,GAAN,CAAU,UAACC,IAAD;AAAA,eAAU,KAAI,CAACC,UAAL,CAAgBD,IAAhB,CAAV;AAAA,OAAV,EAA2CE,IAA3C,CAAgD,EAAhD,CAD0B,CAA5B;AAGD;;;qCAEkE;AAAA,UAAtDC,IAAsD,QAAtDA,IAAsD;AAAA,UAAhDC,MAAgD,QAAhDA,MAAgD;AAAA,UAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,UAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,UAAnBC,OAAmB,QAAnBA,OAAmB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACjE,sJAIUL,IAJV,oEAMgCC,MANhC,+EAQoCC,QARpC,sBAQsDF,IARtD,oEAS8CG,SAT9C,mEAU4CC,OAV5C,kEAW2CC,MAX3C;AAcD","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["class PokemonTCGCatalogue {\r\n  constructor() {\r\n    this.cards = [];\r\n\r\n    this.catalogue = null;\r\n\r\n    this.API = 'https://api.pokemontcg.io';\r\n    this.API_VERSION = 'v1';\r\n    this.API_RESOURCE = 'cards';\r\n\r\n    this.API_ENDPOINT = `${this.API}/${this.API_VERSION}/${this.API_RESOURCE}`;\r\n\r\n    this.UiSelectors = {\r\n      content: '[data-content]',\r\n    };\r\n  }\r\n\r\n  async initializeCatalogue() {\r\n    this.catalogue = document.querySelector(this.UiSelectors.content);\r\n\r\n    this.pullCards();\r\n  }\r\n\r\n  async pullCards() {\r\n    const { cards } = await this.fetchData(this.API_ENDPOINT);\r\n\r\n    this.cards = [...cards];\r\n\r\n    this.createCatalogue(this.cards);\r\n\r\n    console.log(cards);\r\n  }\r\n\r\n  // this function can fetch any data, you just pass url.\r\n  async fetchData(url) {\r\n    const response = await fetch(url);\r\n    const parsedResponse = await response.json();\r\n\r\n    return parsedResponse;\r\n  }\r\n\r\n  createCatalogue(cards) {\r\n    this.catalogue.innerHTML += [\r\n      cards.map((card) => this.createCard(card)).join(''),\r\n    ];\r\n  }\r\n\r\n  createCard({ name, number, imageUrl, supertype, subtype, rarity }) {\r\n    return `\r\n      <article class=\"card\">\r\n        <header class=\"card__header\">\r\n          <h2 class=\"card__heading\">\r\n            ${name}\r\n          </h2>\r\n          <p class=\"card__number\">${number}</p>\r\n        </header>\r\n        <img class=\"card__image\" src=\"${imageUrl}\" alt=\"${name}\">\r\n        <p class=\"card__description\">Supertype: ${supertype}</p>\r\n        <p class=\"card__description\">Subtype: ${subtype}</p>\r\n        <p class=\"card__description\">Rarity: ${rarity}</p>\r\n      </article>\r\n    `;\r\n  }\r\n}\r\n"]}